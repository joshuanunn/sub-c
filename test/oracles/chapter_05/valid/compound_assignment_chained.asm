(Asm.Program
   Asm.Function {name = "main";
     instructions =
     [(Asm.AllocateStack 124); (Asm.Mov ((Asm.Imm 250), (Asm.Stack -4)));
       (Asm.Mov ((Asm.Imm 200), (Asm.Stack -8)));
       (Asm.Mov ((Asm.Imm 100), (Asm.Stack -12)));
       (Asm.Mov ((Asm.Imm 75), (Asm.Stack -16)));
       (Asm.Mov ((Asm.Imm 25), (Asm.Stack -24)));
       Asm.Unary {op = Asm.Neg; dst = (Asm.Stack -24)};
       (Asm.Mov ((Asm.Stack -24), (Asm.Reg Asm.R10)));
       (Asm.Mov ((Asm.Reg Asm.R10), (Asm.Stack -20)));
       (Asm.Mov ((Asm.Imm 0), (Asm.Stack -28)));
       (Asm.Mov ((Asm.Imm 0), (Asm.Stack -32)));
       (Asm.Mov ((Asm.Imm 7), (Asm.Stack -36)));
       Asm.Unary {op = Asm.Neg; dst = (Asm.Stack -36)};
       (Asm.Mov ((Asm.Stack -36), (Asm.Reg Asm.R10)));
       (Asm.Mov ((Asm.Reg Asm.R10), (Asm.Stack -28)));
       (Asm.Mov ((Asm.Stack -20), (Asm.Reg Asm.AX))); Asm.Cdq;
       (Asm.Idiv (Asm.Stack -28));
       (Asm.Mov ((Asm.Reg Asm.DX), (Asm.Stack -40)));
       (Asm.Mov ((Asm.Stack -40), (Asm.Reg Asm.R10)));
       (Asm.Mov ((Asm.Reg Asm.R10), (Asm.Stack -20)));
       (Asm.Mov ((Asm.Stack -16), (Asm.Reg Asm.AX))); Asm.Cdq;
       (Asm.Idiv (Asm.Stack -20));
       (Asm.Mov ((Asm.Reg Asm.AX), (Asm.Stack -44)));
       (Asm.Mov ((Asm.Stack -44), (Asm.Reg Asm.R10)));
       (Asm.Mov ((Asm.Reg Asm.R10), (Asm.Stack -16)));
       (Asm.Mov ((Asm.Stack -12), (Asm.Reg Asm.R10)));
       (Asm.Mov ((Asm.Reg Asm.R10), (Asm.Stack -48)));
       (Asm.Mov ((Asm.Stack -48), (Asm.Reg Asm.R11)));
       Asm.Binary {op = Asm.Mult; src = (Asm.Stack -16);
         dst = (Asm.Reg Asm.R11)};
       (Asm.Mov ((Asm.Reg Asm.R11), (Asm.Stack -48)));
       (Asm.Mov ((Asm.Stack -48), (Asm.Reg Asm.R10)));
       (Asm.Mov ((Asm.Reg Asm.R10), (Asm.Stack -12)));
       (Asm.Mov ((Asm.Stack -8), (Asm.Reg Asm.R10)));
       (Asm.Mov ((Asm.Reg Asm.R10), (Asm.Stack -52)));
       (Asm.Mov ((Asm.Stack -12), (Asm.Reg Asm.R10)));
       Asm.Binary {op = Asm.Sub; src = (Asm.Reg Asm.R10);
         dst = (Asm.Stack -52)};
       (Asm.Mov ((Asm.Stack -52), (Asm.Reg Asm.R10)));
       (Asm.Mov ((Asm.Reg Asm.R10), (Asm.Stack -8)));
       (Asm.Mov ((Asm.Stack -4), (Asm.Reg Asm.R10)));
       (Asm.Mov ((Asm.Reg Asm.R10), (Asm.Stack -56)));
       (Asm.Mov ((Asm.Stack -8), (Asm.Reg Asm.R10)));
       Asm.Binary {op = Asm.Add; src = (Asm.Reg Asm.R10);
         dst = (Asm.Stack -56)};
       (Asm.Mov ((Asm.Stack -56), (Asm.Reg Asm.R10)));
       (Asm.Mov ((Asm.Reg Asm.R10), (Asm.Stack -4)));
       (Asm.Mov ((Asm.Stack -4), (Asm.Reg Asm.R10)));
       (Asm.Mov ((Asm.Reg Asm.R10), (Asm.Stack -32)));
       (Asm.Cmp ((Asm.Imm 2250), (Asm.Stack -4)));
       (Asm.Mov ((Asm.Imm 0), (Asm.Stack -60)));
       (Asm.SetCC (Asm.E, (Asm.Stack -60)));
       (Asm.Cmp ((Asm.Imm 0), (Asm.Stack -60)));
       (Asm.JmpCC (Asm.E, "and_false.17"));
       (Asm.Cmp ((Asm.Imm 2000), (Asm.Stack -8)));
       (Asm.Mov ((Asm.Imm 0), (Asm.Stack -64)));
       (Asm.SetCC (Asm.E, (Asm.Stack -64)));
       (Asm.Cmp ((Asm.Imm 0), (Asm.Stack -64)));
       (Asm.JmpCC (Asm.E, "and_false.17"));
       (Asm.Mov ((Asm.Imm 1), (Asm.Stack -68))); (Asm.Jmp "and_end.18");
       (Asm.Label "and_false.17"); (Asm.Mov ((Asm.Imm 0), (Asm.Stack -68)));
       (Asm.Label "and_end.18"); (Asm.Cmp ((Asm.Imm 0), (Asm.Stack -68)));
       (Asm.JmpCC (Asm.E, "and_false.22"));
       (Asm.Mov ((Asm.Imm 1800), (Asm.Stack -72)));
       Asm.Unary {op = Asm.Neg; dst = (Asm.Stack -72)};
       (Asm.Mov ((Asm.Stack -72), (Asm.Reg Asm.R10)));
       (Asm.Cmp ((Asm.Reg Asm.R10), (Asm.Stack -12)));
       (Asm.Mov ((Asm.Imm 0), (Asm.Stack -76)));
       (Asm.SetCC (Asm.E, (Asm.Stack -76)));
       (Asm.Cmp ((Asm.Imm 0), (Asm.Stack -76)));
       (Asm.JmpCC (Asm.E, "and_false.22"));
       (Asm.Mov ((Asm.Imm 1), (Asm.Stack -80))); (Asm.Jmp "and_end.23");
       (Asm.Label "and_false.22"); (Asm.Mov ((Asm.Imm 0), (Asm.Stack -80)));
       (Asm.Label "and_end.23"); (Asm.Cmp ((Asm.Imm 0), (Asm.Stack -80)));
       (Asm.JmpCC (Asm.E, "and_false.27"));
       (Asm.Mov ((Asm.Imm 18), (Asm.Stack -84)));
       Asm.Unary {op = Asm.Neg; dst = (Asm.Stack -84)};
       (Asm.Mov ((Asm.Stack -84), (Asm.Reg Asm.R10)));
       (Asm.Cmp ((Asm.Reg Asm.R10), (Asm.Stack -16)));
       (Asm.Mov ((Asm.Imm 0), (Asm.Stack -88)));
       (Asm.SetCC (Asm.E, (Asm.Stack -88)));
       (Asm.Cmp ((Asm.Imm 0), (Asm.Stack -88)));
       (Asm.JmpCC (Asm.E, "and_false.27"));
       (Asm.Mov ((Asm.Imm 1), (Asm.Stack -92))); (Asm.Jmp "and_end.28");
       (Asm.Label "and_false.27"); (Asm.Mov ((Asm.Imm 0), (Asm.Stack -92)));
       (Asm.Label "and_end.28"); (Asm.Cmp ((Asm.Imm 0), (Asm.Stack -92)));
       (Asm.JmpCC (Asm.E, "and_false.32"));
       (Asm.Mov ((Asm.Imm 4), (Asm.Stack -96)));
       Asm.Unary {op = Asm.Neg; dst = (Asm.Stack -96)};
       (Asm.Mov ((Asm.Stack -96), (Asm.Reg Asm.R10)));
       (Asm.Cmp ((Asm.Reg Asm.R10), (Asm.Stack -20)));
       (Asm.Mov ((Asm.Imm 0), (Asm.Stack -100)));
       (Asm.SetCC (Asm.E, (Asm.Stack -100)));
       (Asm.Cmp ((Asm.Imm 0), (Asm.Stack -100)));
       (Asm.JmpCC (Asm.E, "and_false.32"));
       (Asm.Mov ((Asm.Imm 1), (Asm.Stack -104))); (Asm.Jmp "and_end.33");
       (Asm.Label "and_false.32"); (Asm.Mov ((Asm.Imm 0), (Asm.Stack -104)));
       (Asm.Label "and_end.33"); (Asm.Cmp ((Asm.Imm 0), (Asm.Stack -104)));
       (Asm.JmpCC (Asm.E, "and_false.37"));
       (Asm.Mov ((Asm.Imm 7), (Asm.Stack -108)));
       Asm.Unary {op = Asm.Neg; dst = (Asm.Stack -108)};
       (Asm.Mov ((Asm.Stack -108), (Asm.Reg Asm.R10)));
       (Asm.Cmp ((Asm.Reg Asm.R10), (Asm.Stack -28)));
       (Asm.Mov ((Asm.Imm 0), (Asm.Stack -112)));
       (Asm.SetCC (Asm.E, (Asm.Stack -112)));
       (Asm.Cmp ((Asm.Imm 0), (Asm.Stack -112)));
       (Asm.JmpCC (Asm.E, "and_false.37"));
       (Asm.Mov ((Asm.Imm 1), (Asm.Stack -116))); (Asm.Jmp "and_end.38");
       (Asm.Label "and_false.37"); (Asm.Mov ((Asm.Imm 0), (Asm.Stack -116)));
       (Asm.Label "and_end.38"); (Asm.Cmp ((Asm.Imm 0), (Asm.Stack -116)));
       (Asm.JmpCC (Asm.E, "and_false.41"));
       (Asm.Cmp ((Asm.Imm 2250), (Asm.Stack -32)));
       (Asm.Mov ((Asm.Imm 0), (Asm.Stack -120)));
       (Asm.SetCC (Asm.E, (Asm.Stack -120)));
       (Asm.Cmp ((Asm.Imm 0), (Asm.Stack -120)));
       (Asm.JmpCC (Asm.E, "and_false.41"));
       (Asm.Mov ((Asm.Imm 1), (Asm.Stack -124))); (Asm.Jmp "and_end.42");
       (Asm.Label "and_false.41"); (Asm.Mov ((Asm.Imm 0), (Asm.Stack -124)));
       (Asm.Label "and_end.42");
       (Asm.Mov ((Asm.Stack -124), (Asm.Reg Asm.AX))); Asm.Ret;
       (Asm.Mov ((Asm.Imm 0), (Asm.Reg Asm.AX))); Asm.Ret]})
