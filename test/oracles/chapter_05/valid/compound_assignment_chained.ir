(Ir.Program
   Ir.Function {name = "main";
     body =
     [Ir.Copy {src = (Ir.Constant 250); dst = (Ir.Var "a.0")};
       Ir.Copy {src = (Ir.Constant 200); dst = (Ir.Var "b.1")};
       Ir.Copy {src = (Ir.Constant 100); dst = (Ir.Var "c.2")};
       Ir.Copy {src = (Ir.Constant 75); dst = (Ir.Var "d.3")};
       Ir.Unary {op = Ir.Negate; src = (Ir.Constant 25);
         dst = (Ir.Var "tmp.0")};
       Ir.Copy {src = (Ir.Var "tmp.0"); dst = (Ir.Var "e.4")};
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "f.5")};
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "x.6")};
       Ir.Unary {op = Ir.Negate; src = (Ir.Constant 7);
         dst = (Ir.Var "tmp.1")};
       Ir.Copy {src = (Ir.Var "tmp.1"); dst = (Ir.Var "f.5")};
       Ir.Binary {op = Ir.Remainder; src1 = (Ir.Var "e.4");
         src2 = (Ir.Var "f.5"); dst = (Ir.Var "tmp.2")};
       Ir.Copy {src = (Ir.Var "tmp.2"); dst = (Ir.Var "e.4")};
       Ir.Binary {op = Ir.Divide; src1 = (Ir.Var "d.3");
         src2 = (Ir.Var "e.4"); dst = (Ir.Var "tmp.3")};
       Ir.Copy {src = (Ir.Var "tmp.3"); dst = (Ir.Var "d.3")};
       Ir.Binary {op = Ir.Multiply; src1 = (Ir.Var "c.2");
         src2 = (Ir.Var "d.3"); dst = (Ir.Var "tmp.4")};
       Ir.Copy {src = (Ir.Var "tmp.4"); dst = (Ir.Var "c.2")};
       Ir.Binary {op = Ir.Subtract; src1 = (Ir.Var "b.1");
         src2 = (Ir.Var "c.2"); dst = (Ir.Var "tmp.5")};
       Ir.Copy {src = (Ir.Var "tmp.5"); dst = (Ir.Var "b.1")};
       Ir.Binary {op = Ir.Add; src1 = (Ir.Var "a.0"); src2 = (Ir.Var "b.1");
         dst = (Ir.Var "tmp.6")};
       Ir.Copy {src = (Ir.Var "tmp.6"); dst = (Ir.Var "a.0")};
       Ir.Copy {src = (Ir.Var "a.0"); dst = (Ir.Var "x.6")};
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Var "a.0");
         src2 = (Ir.Constant 2250); dst = (Ir.Var "tmp.7")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.7"); target = "and.fl.10"};
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Var "b.1");
         src2 = (Ir.Constant 2000); dst = (Ir.Var "tmp.8")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.8"); target = "and.fl.10"};
       Ir.Copy {src = (Ir.Constant 1); dst = (Ir.Var "tmp.9")};
       Ir.Jump {target = "and.en.11"}; (Ir.Label "and.fl.10");
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "tmp.9")};
       (Ir.Label "and.en.11");
       Ir.JumpIfZero {condition = (Ir.Var "tmp.9"); target = "and.fl.15"};
       Ir.Unary {op = Ir.Negate; src = (Ir.Constant 1800);
         dst = (Ir.Var "tmp.12")};
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Var "c.2");
         src2 = (Ir.Var "tmp.12"); dst = (Ir.Var "tmp.13")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.13"); target = "and.fl.15"};
       Ir.Copy {src = (Ir.Constant 1); dst = (Ir.Var "tmp.14")};
       Ir.Jump {target = "and.en.16"}; (Ir.Label "and.fl.15");
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "tmp.14")};
       (Ir.Label "and.en.16");
       Ir.JumpIfZero {condition = (Ir.Var "tmp.14"); target = "and.fl.20"};
       Ir.Unary {op = Ir.Negate; src = (Ir.Constant 18);
         dst = (Ir.Var "tmp.17")};
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Var "d.3");
         src2 = (Ir.Var "tmp.17"); dst = (Ir.Var "tmp.18")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.18"); target = "and.fl.20"};
       Ir.Copy {src = (Ir.Constant 1); dst = (Ir.Var "tmp.19")};
       Ir.Jump {target = "and.en.21"}; (Ir.Label "and.fl.20");
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "tmp.19")};
       (Ir.Label "and.en.21");
       Ir.JumpIfZero {condition = (Ir.Var "tmp.19"); target = "and.fl.25"};
       Ir.Unary {op = Ir.Negate; src = (Ir.Constant 4);
         dst = (Ir.Var "tmp.22")};
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Var "e.4");
         src2 = (Ir.Var "tmp.22"); dst = (Ir.Var "tmp.23")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.23"); target = "and.fl.25"};
       Ir.Copy {src = (Ir.Constant 1); dst = (Ir.Var "tmp.24")};
       Ir.Jump {target = "and.en.26"}; (Ir.Label "and.fl.25");
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "tmp.24")};
       (Ir.Label "and.en.26");
       Ir.JumpIfZero {condition = (Ir.Var "tmp.24"); target = "and.fl.30"};
       Ir.Unary {op = Ir.Negate; src = (Ir.Constant 7);
         dst = (Ir.Var "tmp.27")};
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Var "f.5");
         src2 = (Ir.Var "tmp.27"); dst = (Ir.Var "tmp.28")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.28"); target = "and.fl.30"};
       Ir.Copy {src = (Ir.Constant 1); dst = (Ir.Var "tmp.29")};
       Ir.Jump {target = "and.en.31"}; (Ir.Label "and.fl.30");
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "tmp.29")};
       (Ir.Label "and.en.31");
       Ir.JumpIfZero {condition = (Ir.Var "tmp.29"); target = "and.fl.34"};
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Var "x.6");
         src2 = (Ir.Constant 2250); dst = (Ir.Var "tmp.32")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.32"); target = "and.fl.34"};
       Ir.Copy {src = (Ir.Constant 1); dst = (Ir.Var "tmp.33")};
       Ir.Jump {target = "and.en.35"}; (Ir.Label "and.fl.34");
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "tmp.33")};
       (Ir.Label "and.en.35"); (Ir.Return (Ir.Var "tmp.33"));
       (Ir.Return (Ir.Constant 0))]})
