(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     (Ast.Block
        [(Ast.D
            (Ast.Declaration ((Ast.Identifier "a.0"),
               (Some (Ast.LiteralInt 1)))));
          (Ast.D
             (Ast.Declaration ((Ast.Identifier "b.1"),
                (Some (Ast.LiteralInt 0)))));
          (Ast.S
             (Ast.Expression
                (Ast.Assignment ((Ast.Var (Ast.Identifier "a.0")),
                   Ast.Binary {op = Ast.Multiply; left = (Ast.LiteralInt 3);
                     right =
                     (Ast.Assignment ((Ast.Var (Ast.Identifier "b.1")),
                        (Ast.Var (Ast.Identifier "a.0"))))}
                   ))));
          (Ast.S
             (Ast.Return
                Ast.Binary {op = Ast.Add;
                  left = (Ast.Var (Ast.Identifier "a.0"));
                  right = (Ast.Var (Ast.Identifier "b.1"))}))
          ])})
