(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     [(Ast.D
         (Ast.Declaration ((Ast.Identifier "a"), (Some (Ast.LiteralInt 1)))));
       (Ast.D
          (Ast.Declaration ((Ast.Identifier "b"), (Some (Ast.LiteralInt 0)))));
       (Ast.S
          (Ast.Expression
             (Ast.Assignment ((Ast.Var (Ast.Identifier "a")),
                Ast.Binary {op = Ast.Multiply; left = (Ast.LiteralInt 3);
                  right =
                  (Ast.Assignment ((Ast.Var (Ast.Identifier "b")),
                     (Ast.Var (Ast.Identifier "a"))))}
                ))));
       (Ast.S
          (Ast.Return
             Ast.Binary {op = Ast.Add; left = (Ast.Var (Ast.Identifier "a"));
               right = (Ast.Var (Ast.Identifier "b"))}))
       ]})
