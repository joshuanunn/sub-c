(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     (Ast.Block
        [(Ast.D
            (Ast.Declaration ((Ast.Identifier "x"), (Some (Ast.LiteralInt 1))
               )));
          (Ast.D
             (Ast.Declaration ((Ast.Identifier "y"),
                (Some (Ast.Assignment ((Ast.Var (Ast.Identifier "x")),
                         Ast.Binary {op = Ast.Add;
                           left = (Ast.Var (Ast.Identifier "x"));
                           right = (Ast.LiteralInt 3)}
                         )))
                )));
          (Ast.S
             (Ast.Return
                Ast.Binary {op = Ast.And;
                  left =
                  Ast.Binary {op = Ast.Equal;
                    left = (Ast.Var (Ast.Identifier "x"));
                    right = (Ast.LiteralInt 4)};
                  right =
                  Ast.Binary {op = Ast.Equal;
                    left = (Ast.Var (Ast.Identifier "y"));
                    right = (Ast.LiteralInt 4)}}))
          ])})
