(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     (Ast.Block
        [(Ast.D
            (Ast.Declaration ((Ast.Identifier "sum"),
               (Some (Ast.LiteralInt 0)))));
          (Ast.S
             Ast.If {cond_exp = (Ast.LiteralInt 1);
               then_smt =
               (Ast.Compound
                  (Ast.Block
                     [(Ast.D
                         (Ast.Declaration ((Ast.Identifier "a"),
                            (Some (Ast.LiteralInt 5)))));
                       (Ast.S (Ast.Goto (Ast.Identifier "other_if")));
                       (Ast.S
                          (Ast.Expression
                             (Ast.Assignment (
                                (Ast.Var (Ast.Identifier "sum")),
                                (Ast.LiteralInt 0)))));
                       (Ast.S
                          (Ast.Label ((Ast.Identifier "first_if"),
                             (Ast.Expression
                                (Ast.Assignment (
                                   (Ast.Var (Ast.Identifier "a")),
                                   (Ast.LiteralInt 5))))
                             )));
                       (Ast.S
                          (Ast.Expression
                             (Ast.Assignment (
                                (Ast.Var (Ast.Identifier "sum")),
                                Ast.Binary {op = Ast.Add;
                                  left = (Ast.Var (Ast.Identifier "sum"));
                                  right = (Ast.Var (Ast.Identifier "a"))}
                                ))))
                       ]));
               else_smt = None});
          (Ast.S
             Ast.If {cond_exp = (Ast.LiteralInt 0);
               then_smt =
               (Ast.Compound
                  (Ast.Block
                     [(Ast.S
                         (Ast.Label ((Ast.Identifier "other_if"), Ast.Null)));
                       (Ast.D
                          (Ast.Declaration ((Ast.Identifier "a"),
                             (Some (Ast.LiteralInt 6)))));
                       (Ast.S
                          (Ast.Expression
                             (Ast.Assignment (
                                (Ast.Var (Ast.Identifier "sum")),
                                Ast.Binary {op = Ast.Add;
                                  left = (Ast.Var (Ast.Identifier "sum"));
                                  right = (Ast.Var (Ast.Identifier "a"))}
                                ))));
                       (Ast.S (Ast.Goto (Ast.Identifier "first_if")));
                       (Ast.S
                          (Ast.Expression
                             (Ast.Assignment (
                                (Ast.Var (Ast.Identifier "sum")),
                                (Ast.LiteralInt 0)))))
                       ]));
               else_smt = None});
          (Ast.S (Ast.Return (Ast.Var (Ast.Identifier "sum"))))])})
