(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     (Ast.Block
        [(Ast.S
            Ast.For {
              init =
              (Ast.InclDecl
                 (Ast.Declaration ((Ast.Identifier "i.0"),
                    (Some (Ast.LiteralInt 400)))));
              cond = None;
              post =
              (Some (Ast.Assignment ((Ast.Var (Ast.Identifier "i.0")),
                       Ast.Binary {op = Ast.Subtract;
                         left = (Ast.Var (Ast.Identifier "i.0"));
                         right = (Ast.LiteralInt 100)}
                       )));
              body =
              Ast.If {
                cond_exp =
                Ast.Binary {op = Ast.Equal;
                  left = (Ast.Var (Ast.Identifier "i.0"));
                  right = (Ast.LiteralInt 100)};
                then_smt = (Ast.Return (Ast.LiteralInt 0)); else_smt = None};
              id = (Some (Ast.Identifier "1"))})
          ])})
