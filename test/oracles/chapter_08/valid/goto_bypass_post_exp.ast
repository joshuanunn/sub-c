(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     (Ast.Block
        [(Ast.D
            (Ast.Declaration ((Ast.Identifier "sum"),
               (Some (Ast.LiteralInt 0)))));
          (Ast.S
             Ast.For {
               init =
               (Ast.InclDecl
                  (Ast.Declaration ((Ast.Identifier "i"),
                     (Some (Ast.LiteralInt 0)))));
               cond = None;
               post =
               (Some (Ast.Assignment ((Ast.Var (Ast.Identifier "i")),
                        (Ast.LiteralInt 0))));
               body =
               (Ast.Compound
                  (Ast.Block
                     [(Ast.S
                         (Ast.Label ((Ast.Identifier "lbl"),
                            (Ast.Expression
                               (Ast.Assignment (
                                  (Ast.Var (Ast.Identifier "sum")),
                                  Ast.Binary {op = Ast.Add;
                                    left = (Ast.Var (Ast.Identifier "sum"));
                                    right = (Ast.LiteralInt 1)}
                                  )))
                            )));
                       (Ast.S
                          (Ast.Expression
                             (Ast.Assignment ((Ast.Var (Ast.Identifier "i")),
                                Ast.Binary {op = Ast.Add;
                                  left = (Ast.Var (Ast.Identifier "i"));
                                  right = (Ast.LiteralInt 1)}
                                ))));
                       (Ast.S
                          Ast.If {
                            cond_exp =
                            Ast.Binary {op = Ast.GreaterThan;
                              left = (Ast.Var (Ast.Identifier "i"));
                              right = (Ast.LiteralInt 10)};
                            then_smt = (Ast.Break None); else_smt = None});
                       (Ast.S (Ast.Goto (Ast.Identifier "lbl")))]));
               id = None});
          (Ast.S (Ast.Return (Ast.Var (Ast.Identifier "sum"))))])})
