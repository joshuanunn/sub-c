(Ir.Program
   Ir.Function {name = "main";
     body =
     [Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "ans.0")};
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "i.1")};
       (Ir.Label "loop.st.1");
       Ir.Binary {op = Ir.LessThan; src1 = (Ir.Var "i.1");
         src2 = (Ir.Constant 10); dst = (Ir.Var "tmp.0")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.0"); target = "loop.br.1"};
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "j.2")};
       (Ir.Label "loop.st.2");
       Ir.Binary {op = Ir.LessThan; src1 = (Ir.Var "j.2");
         src2 = (Ir.Constant 10); dst = (Ir.Var "tmp.1")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.1"); target = "loop.br.2"};
       Ir.Binary {op = Ir.Divide; src1 = (Ir.Var "i.1");
         src2 = (Ir.Constant 2); dst = (Ir.Var "tmp.2")};
       Ir.Binary {op = Ir.Multiply; src1 = (Ir.Var "tmp.2");
         src2 = (Ir.Constant 2); dst = (Ir.Var "tmp.3")};
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Var "tmp.3");
         src2 = (Ir.Var "i.1"); dst = (Ir.Var "tmp.4")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.4"); target = "if_else.6"};
       Ir.Jump {target = "loop.br.2"}; Ir.Jump {target = "if_end.5"};
       (Ir.Label "if_else.6");
       Ir.Binary {op = Ir.Add; src1 = (Ir.Var "ans.0");
         src2 = (Ir.Var "i.1"); dst = (Ir.Var "tmp.7")};
       Ir.Copy {src = (Ir.Var "tmp.7"); dst = (Ir.Var "ans.0")};
       (Ir.Label "if_end.5"); (Ir.Label "loop.ct.2");
       Ir.Binary {op = Ir.Add; src1 = (Ir.Var "j.2"); src2 = (Ir.Constant 1);
         dst = (Ir.Var "tmp.8")};
       Ir.Copy {src = (Ir.Var "tmp.8"); dst = (Ir.Var "j.2")};
       Ir.Jump {target = "loop.st.2"}; (Ir.Label "loop.br.2");
       (Ir.Label "loop.ct.1");
       Ir.Binary {op = Ir.Add; src1 = (Ir.Var "i.1"); src2 = (Ir.Constant 1);
         dst = (Ir.Var "tmp.9")};
       Ir.Copy {src = (Ir.Var "tmp.9"); dst = (Ir.Var "i.1")};
       Ir.Jump {target = "loop.st.1"}; (Ir.Label "loop.br.1");
       (Ir.Return (Ir.Var "ans.0")); (Ir.Return (Ir.Constant 0))]})
