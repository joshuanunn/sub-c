(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     (Ast.Block
        [(Ast.D
            (Ast.Declaration ((Ast.Identifier "i.1"),
               (Some (Ast.LiteralInt 0)))));
          (Ast.S (Ast.Goto (Ast.Identifier "target")));
          (Ast.S
             Ast.For {
               init =
               (Ast.InitExp
                  (Some (Ast.Assignment ((Ast.Var (Ast.Identifier "i.1")),
                           (Ast.LiteralInt 5)))));
               cond =
               (Some Ast.Binary {op = Ast.LessThan;
                       left = (Ast.Var (Ast.Identifier "i.1"));
                       right = (Ast.LiteralInt 10)});
               post =
               (Some (Ast.Assignment ((Ast.Var (Ast.Identifier "i.1")),
                        Ast.Binary {op = Ast.Add;
                          left = (Ast.Var (Ast.Identifier "i.1"));
                          right = (Ast.LiteralInt 1)}
                        )));
               body =
               (Ast.Label ((Ast.Identifier "target"),
                  Ast.If {
                    cond_exp =
                    Ast.Binary {op = Ast.Equal;
                      left = (Ast.Var (Ast.Identifier "i.1"));
                      right = (Ast.LiteralInt 0)};
                    then_smt = (Ast.Return (Ast.LiteralInt 1));
                    else_smt = None}
                  ));
               id = (Some (Ast.Identifier "1"))});
          (Ast.S (Ast.Return (Ast.LiteralInt 0)))])})
