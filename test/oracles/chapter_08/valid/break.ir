(Ir.Program
   Ir.Function {name = "main";
     body =
     [Ir.Copy {src = (Ir.Constant 10); dst = (Ir.Var "a.0")};
       Ir.Copy {src = (Ir.Constant 20); dst = (Ir.Var "b.1")};
       Ir.Unary {op = Ir.Negate; src = (Ir.Constant 20);
         dst = (Ir.Var "tmp.0")};
       Ir.Copy {src = (Ir.Var "tmp.0"); dst = (Ir.Var "b.1")};
       (Ir.Label "loop.st.1");
       Ir.Binary {op = Ir.LessThan; src1 = (Ir.Var "b.1");
         src2 = (Ir.Constant 0); dst = (Ir.Var "tmp.1")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.1"); target = "loop.br.1"};
       Ir.Binary {op = Ir.Subtract; src1 = (Ir.Var "a.0");
         src2 = (Ir.Constant 1); dst = (Ir.Var "tmp.2")};
       Ir.Copy {src = (Ir.Var "tmp.2"); dst = (Ir.Var "a.0")};
       Ir.Binary {op = Ir.LessOrEqual; src1 = (Ir.Var "a.0");
         src2 = (Ir.Constant 0); dst = (Ir.Var "tmp.3")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.3"); target = "if.en.4"};
       Ir.Jump {target = "loop.br.1"}; (Ir.Label "if.en.4");
       (Ir.Label "loop.ct.1");
       Ir.Binary {op = Ir.Add; src1 = (Ir.Var "b.1"); src2 = (Ir.Constant 1);
         dst = (Ir.Var "tmp.5")};
       Ir.Copy {src = (Ir.Var "tmp.5"); dst = (Ir.Var "b.1")};
       Ir.Jump {target = "loop.st.1"}; (Ir.Label "loop.br.1");
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Var "a.0");
         src2 = (Ir.Constant 0); dst = (Ir.Var "tmp.6")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.6"); target = "and.fl.10"};
       Ir.Unary {op = Ir.Negate; src = (Ir.Constant 11);
         dst = (Ir.Var "tmp.7")};
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Var "b.1");
         src2 = (Ir.Var "tmp.7"); dst = (Ir.Var "tmp.8")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.8"); target = "and.fl.10"};
       Ir.Copy {src = (Ir.Constant 1); dst = (Ir.Var "tmp.9")};
       Ir.Jump {target = "and.en.11"}; (Ir.Label "and.fl.10");
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "tmp.9")};
       (Ir.Label "and.en.11"); (Ir.Return (Ir.Var "tmp.9"));
       (Ir.Return (Ir.Constant 0))]})
