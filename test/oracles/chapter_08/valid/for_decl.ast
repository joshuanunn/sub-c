(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     (Ast.Block
        [(Ast.D
            (Ast.Declaration ((Ast.Identifier "a"), (Some (Ast.LiteralInt 0))
               )));
          (Ast.S
             Ast.For {
               init =
               (Ast.InclDecl
                  (Ast.Declaration ((Ast.Identifier "i"),
                     (Some Ast.Unary {op = Ast.Negate;
                             exp = (Ast.LiteralInt 100)})
                     )));
               cond =
               (Some Ast.Binary {op = Ast.LessOrEqual;
                       left = (Ast.Var (Ast.Identifier "i"));
                       right = (Ast.LiteralInt 0)});
               post =
               (Some (Ast.Assignment ((Ast.Var (Ast.Identifier "i")),
                        Ast.Binary {op = Ast.Add;
                          left = (Ast.Var (Ast.Identifier "i"));
                          right = (Ast.LiteralInt 1)}
                        )));
               body =
               (Ast.Expression
                  (Ast.Assignment ((Ast.Var (Ast.Identifier "a")),
                     Ast.Binary {op = Ast.Add;
                       left = (Ast.Var (Ast.Identifier "a"));
                       right = (Ast.LiteralInt 1)}
                     )))});
          (Ast.S (Ast.Return (Ast.Var (Ast.Identifier "a"))))])})
