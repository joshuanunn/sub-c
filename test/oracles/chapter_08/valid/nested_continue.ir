(Ir.Program
   Ir.Function {name = "main";
     body =
     [Ir.Copy {src = (Ir.Constant 5); dst = (Ir.Var "x.0")};
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "acc.1")};
       (Ir.Label "continue.while.1");
       Ir.Binary {op = Ir.GreaterOrEqual; src1 = (Ir.Var "x.0");
         src2 = (Ir.Constant 0); dst = (Ir.Var "tmp.0")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.0"); target = "break.while.1"};
       Ir.Copy {src = (Ir.Var "x.0"); dst = (Ir.Var "i.2")};
       (Ir.Label "continue.while.2");
       Ir.Binary {op = Ir.LessOrEqual; src1 = (Ir.Var "i.2");
         src2 = (Ir.Constant 10); dst = (Ir.Var "tmp.1")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.1"); target = "break.while.2"};
       Ir.Binary {op = Ir.Add; src1 = (Ir.Var "i.2"); src2 = (Ir.Constant 1);
         dst = (Ir.Var "tmp.2")};
       Ir.Copy {src = (Ir.Var "tmp.2"); dst = (Ir.Var "i.2")};
       Ir.Binary {op = Ir.Remainder; src1 = (Ir.Var "i.2");
         src2 = (Ir.Constant 2); dst = (Ir.Var "tmp.3")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.3"); target = "if_end.4"};
       Ir.Jump {target = "continue.while.2"}; (Ir.Label "if_end.4");
       Ir.Binary {op = Ir.Add; src1 = (Ir.Var "acc.1");
         src2 = (Ir.Constant 1); dst = (Ir.Var "tmp.5")};
       Ir.Copy {src = (Ir.Var "tmp.5"); dst = (Ir.Var "acc.1")};
       Ir.Jump {target = "continue.while.2"}; (Ir.Label "break.while.2");
       Ir.Binary {op = Ir.Subtract; src1 = (Ir.Var "x.0");
         src2 = (Ir.Constant 1); dst = (Ir.Var "tmp.6")};
       Ir.Copy {src = (Ir.Var "tmp.6"); dst = (Ir.Var "x.0")};
       Ir.Jump {target = "continue.while.1"}; (Ir.Label "break.while.1");
       (Ir.Return (Ir.Var "acc.1")); (Ir.Return (Ir.Constant 0))]})
