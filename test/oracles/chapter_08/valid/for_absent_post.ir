(Ir.Program
   Ir.Function {name = "main";
     body =
     [Ir.Unary {op = Ir.Negate; src = (Ir.Constant 2147483647);
        dst = (Ir.Var "tmp.0")};
       Ir.Copy {src = (Ir.Var "tmp.0"); dst = (Ir.Var "a.0")};
       (Ir.Label "loop.st.1");
       Ir.Binary {op = Ir.Remainder; src1 = (Ir.Var "a.0");
         src2 = (Ir.Constant 5); dst = (Ir.Var "tmp.1")};
       Ir.Binary {op = Ir.NotEqual; src1 = (Ir.Var "tmp.1");
         src2 = (Ir.Constant 0); dst = (Ir.Var "tmp.2")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.2"); target = "loop.br.1"};
       Ir.Binary {op = Ir.Add; src1 = (Ir.Var "a.0"); src2 = (Ir.Constant 1);
         dst = (Ir.Var "tmp.3")};
       Ir.Copy {src = (Ir.Var "tmp.3"); dst = (Ir.Var "a.0")};
       (Ir.Label "loop.ct.1"); Ir.Jump {target = "loop.st.1"};
       (Ir.Label "loop.br.1");
       Ir.Binary {op = Ir.Remainder; src1 = (Ir.Var "a.0");
         src2 = (Ir.Constant 5); dst = (Ir.Var "tmp.4")};
       Ir.JumpIfNotZero {condition = (Ir.Var "tmp.4"); target = "or.tr.7"};
       Ir.Binary {op = Ir.GreaterThan; src1 = (Ir.Var "a.0");
         src2 = (Ir.Constant 0); dst = (Ir.Var "tmp.5")};
       Ir.JumpIfNotZero {condition = (Ir.Var "tmp.5"); target = "or.tr.7"};
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "tmp.6")};
       Ir.Jump {target = "or.en.8"}; (Ir.Label "or.tr.7");
       Ir.Copy {src = (Ir.Constant 1); dst = (Ir.Var "tmp.6")};
       (Ir.Label "or.en.8"); (Ir.Return (Ir.Var "tmp.6"));
       (Ir.Return (Ir.Constant 0))]})
