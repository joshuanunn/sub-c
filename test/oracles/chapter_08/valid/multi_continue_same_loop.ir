(Ir.Program
   Ir.Function {name = "main";
     body =
     [Ir.Copy {src = (Ir.Constant 10); dst = (Ir.Var "x.0")};
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "y.1")};
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "z.2")};
       (Ir.Label "loop.st.1");
       Ir.Binary {op = Ir.Add; src1 = (Ir.Var "z.2"); src2 = (Ir.Constant 1);
         dst = (Ir.Var "tmp.0")};
       Ir.Copy {src = (Ir.Var "tmp.0"); dst = (Ir.Var "z.2")};
       Ir.Binary {op = Ir.LessOrEqual; src1 = (Ir.Var "x.0");
         src2 = (Ir.Constant 0); dst = (Ir.Var "tmp.1")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.1"); target = "if.en.2"};
       Ir.Jump {target = "loop.ct.1"}; (Ir.Label "if.en.2");
       Ir.Binary {op = Ir.Subtract; src1 = (Ir.Var "x.0");
         src2 = (Ir.Constant 1); dst = (Ir.Var "tmp.3")};
       Ir.Copy {src = (Ir.Var "tmp.3"); dst = (Ir.Var "x.0")};
       Ir.Binary {op = Ir.GreaterOrEqual; src1 = (Ir.Var "y.1");
         src2 = (Ir.Constant 10); dst = (Ir.Var "tmp.4")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.4"); target = "if.en.5"};
       Ir.Jump {target = "loop.ct.1"}; (Ir.Label "if.en.5");
       Ir.Binary {op = Ir.Add; src1 = (Ir.Var "y.1"); src2 = (Ir.Constant 1);
         dst = (Ir.Var "tmp.6")};
       Ir.Copy {src = (Ir.Var "tmp.6"); dst = (Ir.Var "y.1")};
       (Ir.Label "loop.ct.1");
       Ir.Binary {op = Ir.NotEqual; src1 = (Ir.Var "z.2");
         src2 = (Ir.Constant 50); dst = (Ir.Var "tmp.7")};
       Ir.JumpIfNotZero {condition = (Ir.Var "tmp.7"); target = "loop.st.1"};
       (Ir.Label "loop.br.1");
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Var "z.2");
         src2 = (Ir.Constant 50); dst = (Ir.Var "tmp.8")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.8"); target = "and.fl.11"};
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Var "x.0");
         src2 = (Ir.Constant 0); dst = (Ir.Var "tmp.9")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.9"); target = "and.fl.11"};
       Ir.Copy {src = (Ir.Constant 1); dst = (Ir.Var "tmp.10")};
       Ir.Jump {target = "and.en.12"}; (Ir.Label "and.fl.11");
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "tmp.10")};
       (Ir.Label "and.en.12");
       Ir.JumpIfZero {condition = (Ir.Var "tmp.10"); target = "and.fl.15"};
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Var "y.1");
         src2 = (Ir.Constant 10); dst = (Ir.Var "tmp.13")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.13"); target = "and.fl.15"};
       Ir.Copy {src = (Ir.Constant 1); dst = (Ir.Var "tmp.14")};
       Ir.Jump {target = "and.en.16"}; (Ir.Label "and.fl.15");
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "tmp.14")};
       (Ir.Label "and.en.16"); (Ir.Return (Ir.Var "tmp.14"));
       (Ir.Return (Ir.Constant 0))]})
