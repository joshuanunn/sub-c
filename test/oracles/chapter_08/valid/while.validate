(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     (Ast.Block
        [(Ast.D
            (Ast.Declaration ((Ast.Identifier "a.0"),
               (Some (Ast.LiteralInt 0)))));
          (Ast.S
             Ast.While {
               cond =
               Ast.Binary {op = Ast.LessThan;
                 left = (Ast.Var (Ast.Identifier "a.0"));
                 right = (Ast.LiteralInt 5)};
               body =
               (Ast.Expression
                  (Ast.Assignment ((Ast.Var (Ast.Identifier "a.0")),
                     Ast.Binary {op = Ast.Add;
                       left = (Ast.Var (Ast.Identifier "a.0"));
                       right = (Ast.LiteralInt 2)}
                     )));
               id = (Some (Ast.Identifier "1"))});
          (Ast.S (Ast.Return (Ast.Var (Ast.Identifier "a.0"))))])})
