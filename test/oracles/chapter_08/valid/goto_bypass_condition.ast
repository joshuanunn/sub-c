(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     (Ast.Block
        [(Ast.D
            (Ast.Declaration ((Ast.Identifier "i"), (Some (Ast.LiteralInt 1))
               )));
          (Ast.S
             Ast.DoWhile {
               body =
               (Ast.Compound
                  (Ast.Block
                     [(Ast.S
                         (Ast.Label ((Ast.Identifier "while_start"),
                            (Ast.Expression
                               (Ast.Assignment (
                                  (Ast.Var (Ast.Identifier "i")),
                                  Ast.Binary {op = Ast.Add;
                                    left = (Ast.Var (Ast.Identifier "i"));
                                    right = (Ast.LiteralInt 1)}
                                  )))
                            )));
                       (Ast.S
                          Ast.If {
                            cond_exp =
                            Ast.Binary {op = Ast.LessThan;
                              left = (Ast.Var (Ast.Identifier "i"));
                              right = (Ast.LiteralInt 10)};
                            then_smt =
                            (Ast.Goto (Ast.Identifier "while_start"));
                            else_smt = None})
                       ]));
               cond = (Ast.LiteralInt 0)});
          (Ast.S (Ast.Return (Ast.Var (Ast.Identifier "i"))))])})
