(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     [(Ast.D
         (Ast.Declaration ((Ast.Identifier "x"), (Some (Ast.LiteralInt 10)))));
       (Ast.D
          (Ast.Declaration ((Ast.Identifier "y"), (Some (Ast.LiteralInt 0)))));
       (Ast.S
          (Ast.Expression
             (Ast.Assignment ((Ast.Var (Ast.Identifier "y")),
                Ast.Conditional {
                  cond_exp =
                  (Ast.Assignment ((Ast.Var (Ast.Identifier "x")),
                     (Ast.LiteralInt 5)));
                  then_exp = (Ast.Var (Ast.Identifier "x"));
                  else_exp = (Ast.LiteralInt 2)}
                ))));
       (Ast.S
          (Ast.Return
             Ast.Binary {op = Ast.And;
               left =
               Ast.Binary {op = Ast.Equal;
                 left = (Ast.Var (Ast.Identifier "x"));
                 right = (Ast.LiteralInt 5)};
               right =
               Ast.Binary {op = Ast.Equal;
                 left = (Ast.Var (Ast.Identifier "y"));
                 right = (Ast.LiteralInt 5)}}))
       ]})
