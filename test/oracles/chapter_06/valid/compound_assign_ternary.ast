(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     [(Ast.D
         (Ast.Declaration ((Ast.Identifier "a"), (Some (Ast.LiteralInt 4)))));
       (Ast.S
          (Ast.Expression
             (Ast.Assignment ((Ast.Var (Ast.Identifier "a")),
                Ast.Binary {op = Ast.Multiply;
                  left = (Ast.Var (Ast.Identifier "a"));
                  right =
                  Ast.Conditional {cond_exp = (Ast.LiteralInt 1);
                    then_exp = (Ast.LiteralInt 2);
                    else_exp = (Ast.LiteralInt 3)}}
                ))));
       (Ast.S (Ast.Return (Ast.Var (Ast.Identifier "a"))))]})
