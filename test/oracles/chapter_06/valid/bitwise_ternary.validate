(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     (Ast.Block
        [(Ast.D (Ast.Declaration ((Ast.Identifier "result.0"), None)));
          (Ast.S
             (Ast.Expression
                Ast.Conditional {
                  cond_exp =
                  Ast.Binary {op = Ast.BwXor; left = (Ast.LiteralInt 1);
                    right = (Ast.LiteralInt 1)};
                  then_exp =
                  (Ast.Assignment ((Ast.Var (Ast.Identifier "result.0")),
                     (Ast.LiteralInt 4)));
                  else_exp =
                  (Ast.Assignment ((Ast.Var (Ast.Identifier "result.0")),
                     (Ast.LiteralInt 5)))}));
          (Ast.S (Ast.Return (Ast.Var (Ast.Identifier "result.0"))))])})
