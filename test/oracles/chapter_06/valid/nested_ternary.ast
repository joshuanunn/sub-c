(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     [(Ast.D
         (Ast.Declaration ((Ast.Identifier "a"), (Some (Ast.LiteralInt 1)))));
       (Ast.D
          (Ast.Declaration ((Ast.Identifier "b"), (Some (Ast.LiteralInt 2)))));
       (Ast.D
          (Ast.Declaration ((Ast.Identifier "flag"),
             (Some (Ast.LiteralInt 0)))));
       (Ast.S
          (Ast.Return
             Ast.Conditional {
               cond_exp =
               Ast.Binary {op = Ast.GreaterThan;
                 left = (Ast.Var (Ast.Identifier "a"));
                 right = (Ast.Var (Ast.Identifier "b"))};
               then_exp = (Ast.LiteralInt 5);
               else_exp =
               Ast.Conditional {cond_exp = (Ast.Var (Ast.Identifier "flag"));
                 then_exp = (Ast.LiteralInt 6); else_exp = (Ast.LiteralInt 7)}}))
       ]})
