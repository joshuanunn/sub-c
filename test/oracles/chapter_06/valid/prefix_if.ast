(Ast.Program
   Ast.Function {return_type = Ast.KwInt; name = (Ast.Identifier "main");
     body =
     [(Ast.D
         (Ast.Declaration ((Ast.Identifier "a"),
            (Some Ast.Unary {op = Ast.Negate; exp = (Ast.LiteralInt 1)}))));
       (Ast.S
          Ast.If {
            cond_exp =
            Ast.Unary {op = Ast.PreIncrement;
              exp = (Ast.Var (Ast.Identifier "a"))};
            then_smt = (Ast.Return (Ast.LiteralInt 0));
            else_smt =
            (Some Ast.If {
                    cond_exp =
                    Ast.Unary {op = Ast.PreIncrement;
                      exp = (Ast.Var (Ast.Identifier "a"))};
                    then_smt = (Ast.Return (Ast.LiteralInt 1));
                    else_smt = None})});
       (Ast.S (Ast.Return (Ast.LiteralInt 0)))]})
