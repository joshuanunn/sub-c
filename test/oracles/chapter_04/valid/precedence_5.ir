(Ir.Program
   Ir.Function {name = "main";
     body =
     [Ir.Binary {op = Ir.Equal; src1 = (Ir.Constant 0);
        src2 = (Ir.Constant 0); dst = (Ir.Var "tmp.0")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.0"); target = "and_false.5"};
       Ir.Binary {op = Ir.Add; src1 = (Ir.Constant 2);
         src2 = (Ir.Constant 1); dst = (Ir.Var "tmp.1")};
       Ir.Binary {op = Ir.GreaterThan; src1 = (Ir.Var "tmp.1");
         src2 = (Ir.Constant 1); dst = (Ir.Var "tmp.2")};
       Ir.Binary {op = Ir.Equal; src1 = (Ir.Constant 3);
         src2 = (Ir.Var "tmp.2"); dst = (Ir.Var "tmp.3")};
       Ir.JumpIfZero {condition = (Ir.Var "tmp.3"); target = "and_false.5"};
       Ir.Copy {src = (Ir.Constant 1); dst = (Ir.Var "tmp.4")};
       Ir.Jump {target = "and_end.6"}; (Ir.Label "and_false.5");
       Ir.Copy {src = (Ir.Constant 0); dst = (Ir.Var "tmp.4")};
       (Ir.Label "and_end.6");
       Ir.Binary {op = Ir.Add; src1 = (Ir.Var "tmp.4");
         src2 = (Ir.Constant 1); dst = (Ir.Var "tmp.7")};
       (Ir.Return (Ir.Var "tmp.7"))]})
